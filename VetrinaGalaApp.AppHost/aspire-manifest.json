{
  "$schema": "https://json.schemastore.org/aspire-8.0.json",
  "resources": {
    "postgres": {
      "type": "container.v0",
      "connectionString": "Host={postgres.bindings.tcp.host};Port={postgres.bindings.tcp.port};Username=postgres;Password={postgres-password.value}",
      "image": "docker.io/library/postgres:17.0",
      "volumes": [
        {
          "name": "vetrinagalaapp.apphost-266b044550-postgres-data",
          "target": "/var/lib/postgresql/data",
          "readOnly": false
        }
      ],
      "env": {
        "POSTGRES_HOST_AUTH_METHOD": "scram-sha-256",
        "POSTGRES_INITDB_ARGS": "--auth-host=scram-sha-256 --auth-local=scram-sha-256",
        "POSTGRES_USER": "postgres",
        "POSTGRES_PASSWORD": "{postgres-password.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5432
        }
      }
    },
    "minio": {
      "type": "container.v0",
      "image": "minio/minio:latest",
      "args": [
        "server",
        "/data",
        "--console-address",
        ":9001"
      ],
      "bindMounts": [
        {
          "source": "VetrinaGalaApp.AppHost/minio-data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "env": {
        "MINIO_ROOT_USER": "minioadmin",
        "MINIO_ROOT_PASSWORD": "minioadmin"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 9000
        },
        "console": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 9001
        }
      }
    },
    "postgresdb": {
      "type": "value.v0",
      "connectionString": "{postgres.connectionString};Database=postgresdb"
    },
    "migrations": {
      "type": "project.v0",
      "path": "VetrinaGalaApp.MigrationService/VetrinaGalaApp.MigrationService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ConnectionStrings__postgresdb": "{postgresdb.connectionString}"
      }
    },
    "apiservice": {
      "type": "project.v0",
      "path": "VetrinaGalaApp.ApiService/VetrinaGalaApp.ApiService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "HTTP_PORTS": "{apiservice.bindings.http.targetPort}",
        "ConnectionStrings__postgresdb": "{postgresdb.connectionString}",
        "services__minio__http__0": "{minio.bindings.http.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "frontend": {
      "type": "container.v1",
      "build": {
        "context": "VetrinaGalaApp.Client",
        "dockerfile": "VetrinaGalaApp.Client/Dockerfile"
      },
      "env": {
        "NODE_ENV": "development",
        "services__apiservice__http__0": "{apiservice.bindings.http.url}",
        "services__apiservice__https__0": "{apiservice.bindings.https.url}",
        "BROWSER": "none",
        "VITE_PORT": "{frontend.bindings.http.targetPort}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 8000,
          "external": true
        }
      }
    },
    "postgres-password": {
      "type": "parameter.v0",
      "value": "{postgres-password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}